apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.1'
    defaultConfig {
        applicationId 'me.vickychijwani.kotlinkoans'
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1_002_000      // 3 digits each for major, minor, patch
        versionName '1.2.0'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        // enable support for vector drawables on API < 21
        vectorDrawables.useSupportLibrary = true
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/code']
        }
        debug {
            java.srcDirs = ['src/debug/code']
        }
        gplay {
            java.srcDirs = ['src/gplay/code']
        }
        fdroid {
            java.srcDirs = ['src/fdroid/code']
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "default"
    productFlavors {
        gplay {
            dimension "default"
        }
        fdroid {
            dimension "default"
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://jitpack.io' }  // for github dependencies
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // architecture
    compile "android.arch.lifecycle:runtime:$rootProject.ext.archComponentsVersion"
    compile "android.arch.lifecycle:extensions:$rootProject.ext.archComponentsVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.ext.archComponentsVersion"

    // UI
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibVersion"
    compile 'com.getkeepsafe.taptargetview:taptargetview:1.9.1'
    // using a fork because https://github.com/tsengvn/typekit/issues/9#issuecomment-324478332
    compile 'com.github.katoro:typekit:1.0.1'

    // networking / communication / data storage
    compile("com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion") {
        exclude module: "okhttp"
    }
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"

    // misc
    gplayCompile "com.google.firebase:firebase-core:$rootProject.ext.firebaseVersion"
    gplayCompile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') { transitive = true }

    // debug
    debugCompile "com.squareup.leakcanary:leakcanary-android:1.5.4"
    debugCompile "com.jakewharton.scalpel:scalpel:1.1.2"
    debugCompile "io.palaima.debugdrawer:debugdrawer:0.7.0"
    debugCompile "io.palaima.debugdrawer:debugdrawer-commons:$rootProject.ext.debugdrawerVersion"
    debugCompile "io.palaima.debugdrawer:debugdrawer-okhttp3:$rootProject.ext.debugdrawerVersion"
    debugCompile "io.palaima.debugdrawer:debugdrawer-picasso:$rootProject.ext.debugdrawerVersion"
    debugCompile "io.palaima.debugdrawer:debugdrawer-scalpel:$rootProject.ext.debugdrawerVersion"

    // testing
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}

// google-services.json is mandatory for release builds (used by Firebase Analytics)
task checkGoogleServicesJsonExists << {
    if (!file('google-services.json').exists()) {
        throw new FileNotFoundException('Missing google-services.json!')
    }
}

// Fabric / Crashlytics keys are mandatory for release builds
task checkFabricPropertiesExists << {
    if (!file('fabric.properties').exists()) {
        throw new FileNotFoundException('Missing fabric.properties file for Fabric / Crashlytics!')
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn checkFabricPropertiesExists
        task.dependsOn checkGoogleServicesJsonExists
    }
}
